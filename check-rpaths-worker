#! /bin/bash
# $Id: check-rpaths-worker,v 1.4 2004/05/18 21:50:13 ensc Exp $

# Copyright (C) 2004 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
#  
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


fail=
IFS=:

function msg()
{
    local val=$1
    local cmp=$2
    local msg=
    local fail=

    test $[ $val & $cmp ] -ne 0 || return 0

    if test $[ $val & ~$QA_RPATHS ] -eq 0; then
	msg=WARNING
    else
	msg=ERROR
	fail=1
    fi

    shift 2
    echo "$msg: $@" >&2

    test -z "$fail"
}

: ${QA_RPATHS:=0}

for i; do
    pos=0
    rpath=$(readelf -d "$i" 2>/dev/null | LANG=C grep '(RPATH).*:') || continue
    rpath=$(echo "$rpath" | LANG=C sed -e 's!.*(RPATH).*: \[\(.*\)\]!\1!p;d')
    tmp=aux:$rpath:/lib/aux || :
    set -- $tmp
    shift
    for j; do
	if test -z "$j"; then
	    badness=16
	else
	    case "$j" in
	        (/lib/*|/usr/lib/*|/usr/X11R6/lib/*|/usr/local/lib/*)
		    badness=0;;
	        (/lib64/*|/usr/lib64/*|/usr/X11R6/lib64/*|/usr/local/lib64/*)
		    badness=0;;

		(\$ORIGIN|\${ORIGINX})
		    test $pos -ne 0 && badness=8 || badness=0 ;;
		(/*\$PLATFORM*|/*\${PLATFORM}*|/*\$LIB*|/*\${LIB}*)
		    badness=0;;
	    	
	        (/lib|/usr/lib|/usr/X11R6/lib)
		    badness=1;;
	        (/lib64|/usr/lib64|/usr/X11R6/lib64)
		    badness=1;;
	    	
	        (.*)
		    badness=4;;
	        *)  badness=2;;
	    esac
	fi

	base=${i##$RPM_BUILD_ROOT}
	msg "$badness"  1 "file '$base' contains a standard rpath '$j' in [$rpath]"  || fail=1
	msg "$badness"  2 "file '$base' contains an invalid rpath '$j' in [$rpath]"  || fail=1
	msg "$badness"  4 "file '$base' contains an insecure rpath '$j' in [$rpath]" || fail=1
	msg "$badness"  8 "file '$base' contains the \$ORIGIN rpath specifier at the wrong position in [$rpath]" || fail=1
	msg "$badness" 16 "file '$base' contains an empty rpath in [$rpath]"         || fail=1

	let ++pos
    done
done

test -z "$fail"
